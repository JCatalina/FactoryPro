<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<context:annotation-config />
	<aop:aspectj-autoproxy />
	<context:component-scan base-package="com.factory" />

	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		     <!-- 1、测试环境  2、开发环境  3、真实环境-->
		<property name="locations">
			 <!-- <value>classpath:smoke.properties</value>      -->
			<value>classpath:dev.properties</value>  	       
			<!--<value>classpath:production.properties</value>-->  
		</property>
	</bean>
	

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.c3p0.acquireRetryAttempts">30</prop>
				<prop key="hibernate.c3p0.acquireIncrement">2</prop>
				<prop key="hibernate.c3p0.checkoutTimeout">30000</prop>
				<prop key="hibernate.c3p0.idleConnectionTestPeriod">120</prop>
				<prop key="hibernate.c3p0.maxIdleTime">180</prop>
				<prop key="hibernate.c3p0.initialPoolSize">3</prop>
				<prop key="hibernate.c3p0.maxPoolSize">50</prop>
				<prop key="hibernate.c3p0.minPoolSize">1</prop>
				<prop key="hibernate.c3p0.maxStatements">0</prop>
				<prop key="hibernate.c3p0.validate">true</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.factory.model</value>
			</list>
		</property>
	</bean>

 	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find" read-only="true" />
			<tx:method name="getList" read-only="true" />
			<tx:method name="getManyToMany" read-only="true" />
			<tx:method name="getScrollData" read-only="true" />
			<tx:method name="participlesQuery" read-only="true" />
			<tx:method name="getT" read-only="true" />
			<tx:method name="getNext" read-only="true" />
			<tx:method name="getPrevious" read-only="true" />
			<tx:method name="getManyToManyList" read-only="true" />
			<tx:method name="getManyToManyList" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置事务拦截器拦截哪些类的哪些方法,一般设置成拦截Service -->
	<aop:config proxy-target-class="true">
		<!-- 定义在service包或者子包里的任意类的任意公共方法的执行： -->
		<aop:pointcut expression="execution(public * com.factory.*.service..*.*(..))"
			id="productServiceMethods" />
		
		<!-- 拦截productServiceMethods的txAdvice方法 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods" />
	</aop:config>
	
	
</beans>